.container
  .group-header
    .group-header-name
      %h1= @group.name
    .group-header-buttons
      - if policy(@group).edit?
        = link_to "Edit", edit_group_path(@group), class: "action-btn btn btn-primary btn-sm"
      - if @membership_for_current_user.present?
        = link_to "Leave group", group_membership_path(@group, @membership_for_current_user),
          method: :delete, remote: true, class: "action-btn btn btn-danger btn-sm",
          data: { confirm: "Are you sure you want to leave the group?" }
  %p.text-muted= @group.public? ? "Public" : "Private"
  %p.lead= @group.description

  %p
    %b Admins:
    = @group.admins.pluck(:username).join(", ")

  %ul.nav.nav-tabs{ role: "tablist" }
    %li.nav-item{ role: "presentation" }
      %a#leaderboards_tab.nav-link.active{ data: { toggle: "tab" }, href: "#leaderboards", role: "tab" }
        Leaderboards
    %li.nav-item{ role: "presentation" }
      %a#members_tab.nav-link{ data: { toggle: "tab" }, href: "#members", role: "tab" }
        Members
        = "(#{@group.members.count})"
    - if policy(@group).update?
      %li.nav-item{ role: "presentation" }
        %a#membership_requests_tab.nav-link{ data: { toggle: "tab" }, href: "#membership_requests", role: "tab" }
          Membership Requests
          = "(#{@group.membership_requests.count})"

  .tab-content
    #leaderboards.tab-pane.fade.show.active{ role: "tabpanel" }
      = render partial: "leaderboard", locals: { families: @families, timeframes: @timeframes, leaderboard: @leaderboard }
    #members.tab-pane.fade{ role: "tabpanel" }
      %table.table.table-borderless.table-hover
        %tbody
          - @group.memberships.each do |membership|
            %tr
              %td=membership.member.username
              - if policy(@group).update? && !(membership.member == current_user)
                %td
                  - unless @group.admin?(membership.member)
                    = link_to "Make admin", group_membership_path(@group, membership, membership: { admin: true }),
                      method: :patch, remote: true, class: "btn btn-secondary btn-sm",
                      data: { confirm: "Are you sure you want to make #{membership.member.username} an admin?" }
                    = link_to "Remove", group_membership_path(@group, membership),
                      method: :delete, remote: true, class: "btn btn-danger btn-sm",
                      data: { confirm: "Are you sure you want to remove #{membership.member.username} from the group?" }

    - if policy(@group).update?
      #membership_requests.tab-pane.fade{ role: "tabpanel" }
        %table.table.table-borderless.table-hover
          %tbody
            - @group.membership_requests.each do |request|
              %tr
                %td=request.user.username
                %td
                  = link_to "Approve", membership_request_approvals_path(membership_request_id: request.id),
                    method: :post, remote: true, class: "btn btn-primary"

